/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type { Membership, MembershipInterface } from '../Membership'

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'values',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'onERC1155BatchReceived',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'onERC1155Received',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'users',
        type: 'address[]',
      },
      {
        internalType: 'string[]',
        name: 'tokenURIs',
        type: 'string[]',
      },
    ],
    name: 'provideMembership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'users',
        type: 'address[]',
      },
    ],
    name: 'revokeMembership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'tokenByIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60806040523480156200001157600080fd5b506040516200254338038062002543833981016040819052620000349162000251565b8151829082906200004d906000906020850190620000de565b50805162000063906001906020840190620000de565b505050620000806200007a6200008860201b60201c565b6200008c565b5050620002f8565b3390565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ec90620002bb565b90600052602060002090601f0160209004810192826200011057600085556200015b565b82601f106200012b57805160ff19168380011785556200015b565b828001600101855582156200015b579182015b828111156200015b5782518255916020019190600101906200013e565b50620001699291506200016d565b5090565b5b808211156200016957600081556001016200016e565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ac57600080fd5b81516001600160401b0380821115620001c957620001c962000184565b604051601f8301601f19908116603f01168101908282118183101715620001f457620001f462000184565b816040528381526020925086838588010111156200021157600080fd5b600091505b8382101562000235578582018301518183018401529082019062000216565b83821115620002475760008385830101525b9695505050505050565b600080604083850312156200026557600080fd5b82516001600160401b03808211156200027d57600080fd5b6200028b868387016200019a565b93506020850151915080821115620002a257600080fd5b50620002b1858286016200019a565b9150509250929050565b600181811c90821680620002d057607f821691505b60208210811415620002f257634e487b7160e01b600052602260045260246000fd5b50919050565b61223b80620003086000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638129fc1c116100c3578063bc197c811161007c578063bc197c81146102c0578063c7fbe1d0146102f5578063c87b56dd14610308578063e985e9c51461031b578063f23a6e6114610357578063f2fde38b1461039057600080fd5b80638129fc1c146102665780638971b4641461026e5780638da5cb5b1461028157806395d89b4114610292578063a22cb4651461029a578063b88d4fde146102ad57600080fd5b80632f745c59116101155780632f745c59146101ff57806342842e0e146102125780634f6ccce7146102255780636352211e1461023857806370a082311461024b578063715018a61461025e57600080fd5b806301ffc9a71461015d57806306fdde0314610185578063081812fc1461019a578063095ea7b3146101c557806318160ddd146101da57806323b872dd146101ec575b600080fd5b61017061016b366004611998565b6103a3565b60405190151581526020015b60405180910390f35b61018d6103b4565b60405161017c9190611a0d565b6101ad6101a8366004611a20565b610446565b6040516001600160a01b03909116815260200161017c565b6101d86101d3366004611a55565b61046d565b005b6008545b60405190815260200161017c565b6101d86101fa366004611a7f565b610588565b6101de61020d366004611a55565b6105b9565b6101d8610220366004611a7f565b61064f565b6101de610233366004611a20565b61066a565b6101ad610246366004611a20565b6106fd565b6101de610259366004611abb565b61075d565b6101d86107e3565b6101d86107f7565b6101d861027c366004611c0b565b610864565b600b546001600160a01b03166101ad565b61018d6108f3565b6101d86102a8366004611cf6565b610902565b6101d86102bb366004611d32565b610911565b6102dc6102ce366004611e3c565b600098975050505050505050565b6040516001600160e01b0319909116815260200161017c565b6101d8610303366004611ef7565b610943565b61018d610316366004611a20565b610a0f565b610170610329366004611f2c565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102dc610365366004611f5f565b7ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf979695505050505050565b6101d861039e366004611abb565b610a1a565b60006103ae82610a93565b92915050565b6060600080546103c390611fd7565b80601f01602080910402602001604051908101604052809291908181526020018280546103ef90611fd7565b801561043c5780601f106104115761010080835404028352916020019161043c565b820191906000526020600020905b81548152906001019060200180831161041f57829003601f168201915b5050505050905090565b600061045182610ab8565b506000908152600460205260409020546001600160a01b031690565b6000610478826106fd565b9050806001600160a01b0316836001600160a01b031614156104eb5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061050757506105078133610329565b6105795760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016104e2565b6105838383610b17565b505050565b6105923382610b85565b6105ae5760405162461bcd60e51b81526004016104e290612012565b610583838383610c04565b60006105c48361075d565b82106106265760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016104e2565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61058383838360405180602001604052806000815250610911565b600061067560085490565b82106106d85760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016104e2565b600882815481106106eb576106eb612060565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806103ae5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104e2565b60006001600160a01b0382166107c75760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104e2565b506001600160a01b031660009081526003602052604090205490565b6107eb610dab565b6107f56000610e05565b565b6107ff610dab565b600b54600160a01b900460ff161561084f5760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016104e2565b600b805460ff60a01b1916600160a01b179055565b61086c610dab565b815160005b818110156108ed57610887600c80546001019055565b6000610892600c5490565b90506108b78583815181106108a9576108a9612060565b602002602001015182610e57565b6108da818584815181106108cd576108cd612060565b6020026020010151610fa5565b50806108e58161208c565b915050610871565b50505050565b6060600180546103c390611fd7565b61090d33838361103f565b5050565b61091b3383610b85565b6109375760405162461bcd60e51b81526004016104e290612012565b6108ed8484848461110e565b805160005b8181101561058357600061097484838151811061096757610967612060565b602002602001015161075d565b116109c15760405162461bcd60e51b815260206004820152601b60248201527f7573657220646f65736e742068617665206d656d62657273686970000000000060448201526064016104e2565b6109cb600c611141565b60006109f18483815181106109e2576109e2612060565b602002602001015160006105b9565b90506109fc81611198565b5080610a078161208c565b915050610948565b60606103ae826111a1565b610a22610dab565b6001600160a01b038116610a875760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e2565b610a9081610e05565b50565b60006001600160e01b0319821663780e9d6360e01b14806103ae57506103ae826112aa565b6000818152600260205260409020546001600160a01b0316610a905760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104e2565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b4c826106fd565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b91836106fd565b9050806001600160a01b0316846001600160a01b03161480610bd857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610bfc5750836001600160a01b0316610bf184610446565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c17826106fd565b6001600160a01b031614610c7b5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016104e2565b6001600160a01b038216610cdd5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104e2565b610ce88383836112fa565b610cf3600082610b17565b6001600160a01b0383166000908152600360205260408120805460019290610d1c9084906120a7565b90915550506001600160a01b0382166000908152600360205260408120805460019290610d4a9084906120be565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600b546001600160a01b031633146107f55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e2565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610ead5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104e2565b6000818152600260205260409020546001600160a01b031615610f125760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104e2565b610f1e600083836112fa565b6001600160a01b0382166000908152600360205260408120805460019290610f479084906120be565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b03166110205760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016104e2565b6000828152600a602090815260409091208251610583928401906118b3565b816001600160a01b0316836001600160a01b031614156110a15760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104e2565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611119848484610c04565b61112584848484611305565b6108ed5760405162461bcd60e51b81526004016104e2906120d6565b8054806111905760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f77000000000060448201526064016104e2565b600019019055565b610a9081611412565b60606111ac82610ab8565b6000828152600a6020526040812080546111c590611fd7565b80601f01602080910402602001604051908101604052809291908181526020018280546111f190611fd7565b801561123e5780601f106112135761010080835404028352916020019161123e565b820191906000526020600020905b81548152906001019060200180831161122157829003601f168201915b50505050509050600061125c60408051602081019091526000815290565b905080516000141561126f575092915050565b8151156112a1578082604051602001611289929190612128565b60405160208183030381529060405292505050919050565b610bfc84611452565b60006001600160e01b031982166380ac58cd60e01b14806112db57506001600160e01b03198216635b5e139f60e01b145b806103ae57506301ffc9a760e01b6001600160e01b03198316146103ae565b6105838383836114c6565b60006001600160a01b0384163b1561140757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611349903390899088908890600401612157565b602060405180830381600087803b15801561136357600080fd5b505af1925050508015611393575060408051601f3d908101601f1916820190925261139091810190612194565b60015b6113ed573d8080156113c1576040519150601f19603f3d011682016040523d82523d6000602084013e6113c6565b606091505b5080516113e55760405162461bcd60e51b81526004016104e2906120d6565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bfc565b506001949350505050565b61141b8161157e565b6000818152600a60205260409020805461143490611fd7565b159050610a90576000818152600a60205260408120610a9091611937565b606061145d82610ab8565b600061147460408051602081019091526000815290565b9050600081511161149457604051806020016040528060008152506114bf565b8061149e84611625565b6040516020016114af929190612128565b6040516020818303038152906040525b9392505050565b6001600160a01b0383166115215761151c81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611544565b816001600160a01b0316836001600160a01b031614611544576115448382611723565b6001600160a01b03821661155b57610583816117c0565b826001600160a01b0316826001600160a01b03161461058357610583828261186f565b6000611589826106fd565b9050611597816000846112fa565b6115a2600083610b17565b6001600160a01b03811660009081526003602052604081208054600192906115cb9084906120a7565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6060816116495750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611673578061165d8161208c565b915061166c9050600a836121c7565b915061164d565b60008167ffffffffffffffff81111561168e5761168e611ad6565b6040519080825280601f01601f1916602001820160405280156116b8576020820181803683370190505b5090505b8415610bfc576116cd6001836120a7565b91506116da600a866121db565b6116e59060306120be565b60f81b8183815181106116fa576116fa612060565b60200101906001600160f81b031916908160001a90535061171c600a866121c7565b94506116bc565b600060016117308461075d565b61173a91906120a7565b60008381526007602052604090205490915080821461178d576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906117d2906001906120a7565b600083815260096020526040812054600880549394509092849081106117fa576117fa612060565b90600052602060002001549050806008838154811061181b5761181b612060565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611853576118536121ef565b6001900381819060005260206000200160009055905550505050565b600061187a8361075d565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b8280546118bf90611fd7565b90600052602060002090601f0160209004810192826118e15760008555611927565b82601f106118fa57805160ff1916838001178555611927565b82800160010185558215611927579182015b8281111561192757825182559160200191906001019061190c565b5061193392915061196d565b5090565b50805461194390611fd7565b6000825580601f10611953575050565b601f016020900490600052602060002090810190610a9091905b5b80821115611933576000815560010161196e565b6001600160e01b031981168114610a9057600080fd5b6000602082840312156119aa57600080fd5b81356114bf81611982565b60005b838110156119d05781810151838201526020016119b8565b838111156108ed5750506000910152565b600081518084526119f98160208601602086016119b5565b601f01601f19169290920160200192915050565b6020815260006114bf60208301846119e1565b600060208284031215611a3257600080fd5b5035919050565b80356001600160a01b0381168114611a5057600080fd5b919050565b60008060408385031215611a6857600080fd5b611a7183611a39565b946020939093013593505050565b600080600060608486031215611a9457600080fd5b611a9d84611a39565b9250611aab60208501611a39565b9150604084013590509250925092565b600060208284031215611acd57600080fd5b6114bf82611a39565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611b1557611b15611ad6565b604052919050565b600067ffffffffffffffff821115611b3757611b37611ad6565b5060051b60200190565b600082601f830112611b5257600080fd5b81356020611b67611b6283611b1d565b611aec565b82815260059290921b84018101918181019086841115611b8657600080fd5b8286015b84811015611ba857611b9b81611a39565b8352918301918301611b8a565b509695505050505050565b600067ffffffffffffffff831115611bcd57611bcd611ad6565b611be0601f8401601f1916602001611aec565b9050828152838383011115611bf457600080fd5b828260208301376000602084830101529392505050565b6000806040808486031215611c1f57600080fd5b833567ffffffffffffffff80821115611c3757600080fd5b611c4387838801611b41565b9450602091508186013581811115611c5a57600080fd5b8601601f81018813611c6b57600080fd5b8035611c79611b6282611b1d565b81815260059190911b8201840190848101908a831115611c9857600080fd5b8584015b83811015611ce457803586811115611cb45760008081fd5b8501603f81018d13611cc65760008081fd5b611cd68d898301358b8401611bb3565b845250918601918601611c9c565b50809750505050505050509250929050565b60008060408385031215611d0957600080fd5b611d1283611a39565b915060208301358015158114611d2757600080fd5b809150509250929050565b60008060008060808587031215611d4857600080fd5b611d5185611a39565b9350611d5f60208601611a39565b925060408501359150606085013567ffffffffffffffff811115611d8257600080fd5b8501601f81018713611d9357600080fd5b611da287823560208401611bb3565b91505092959194509250565b60008083601f840112611dc057600080fd5b50813567ffffffffffffffff811115611dd857600080fd5b6020830191508360208260051b8501011115611df357600080fd5b9250929050565b60008083601f840112611e0c57600080fd5b50813567ffffffffffffffff811115611e2457600080fd5b602083019150836020828501011115611df357600080fd5b60008060008060008060008060a0898b031215611e5857600080fd5b611e6189611a39565b9750611e6f60208a01611a39565b9650604089013567ffffffffffffffff80821115611e8c57600080fd5b611e988c838d01611dae565b909850965060608b0135915080821115611eb157600080fd5b611ebd8c838d01611dae565b909650945060808b0135915080821115611ed657600080fd5b50611ee38b828c01611dfa565b999c989b5096995094979396929594505050565b600060208284031215611f0957600080fd5b813567ffffffffffffffff811115611f2057600080fd5b610bfc84828501611b41565b60008060408385031215611f3f57600080fd5b611f4883611a39565b9150611f5660208401611a39565b90509250929050565b60008060008060008060a08789031215611f7857600080fd5b611f8187611a39565b9550611f8f60208801611a39565b94506040870135935060608701359250608087013567ffffffffffffffff811115611fb957600080fd5b611fc589828a01611dfa565b979a9699509497509295939492505050565b600181811c90821680611feb57607f821691505b6020821081141561200c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156120a0576120a0612076565b5060010190565b6000828210156120b9576120b9612076565b500390565b600082198211156120d1576120d1612076565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000835161213a8184602088016119b5565b83519083019061214e8183602088016119b5565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061218a908301846119e1565b9695505050505050565b6000602082840312156121a657600080fd5b81516114bf81611982565b634e487b7160e01b600052601260045260246000fd5b6000826121d6576121d66121b1565b500490565b6000826121ea576121ea6121b1565b500690565b634e487b7160e01b600052603160045260246000fdfea26469706673582212207da340359abcc5cc6688a7daf5d71d78fc88a909c358dcb94c107e7ced9846f664736f6c63430008090033'

type MembershipConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: MembershipConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class Membership__factory extends ContractFactory {
  constructor(...args: MembershipConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Membership> {
    return super.deploy(name, symbol, overrides || {}) as Promise<Membership>
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {})
  }
  override attach(address: string): Membership {
    return super.attach(address) as Membership
  }
  override connect(signer: Signer): Membership__factory {
    return super.connect(signer) as Membership__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): MembershipInterface {
    return new utils.Interface(_abi) as MembershipInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Membership {
    return new Contract(address, _abi, signerOrProvider) as Membership
  }
}
