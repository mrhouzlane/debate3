/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Forum, ForumInterface } from "../Forum";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_moderators",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_membershipNFT",
        type: "address",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MONTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TWODAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_contributorByIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_contributorCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "score",
        type: "uint256",
      },
    ],
    name: "addContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allowedForCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contributionScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dumyCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContributors",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moderator",
        type: "address",
      },
    ],
    name: "isModerator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastInteractionUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "moderatorsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "string[]",
        name: "tokenURIs",
        type: "string[]",
      },
    ],
    name: "provideMembership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "revokeMembership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526202a300600981905562015180600a556200002190600f62000273565b600b553480156200003157600080fd5b50604051620016bb380380620016bb833981016040819052620000549162000390565b6200005f3362000167565b60025460ff16151560011415620000bc5760405162461bcd60e51b815260206004820152601360248201527f616c726561647920696e697469616c697a656400000000000000000000000000604482015260640160405180910390fd5b82516001600160a01b03831660805260005b818110156200013957600160046000878481518110620000f257620000f262000483565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620001308162000499565b915050620000ce565b506002805460ff1916600117905581516200015c906003906020850190620001b7565b5050505050620004f4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620001c590620004b7565b90600052602060002090601f016020900481019282620001e9576000855562000234565b82601f106200020457805160ff191683800117855562000234565b8280016001018555821562000234579182015b828111156200023457825182559160200191906001019062000217565b506200024292915062000246565b5090565b5b8082111562000242576000815560010162000247565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156200029057620002906200025d565b500290565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620002d657620002d662000295565b604052919050565b80516001600160a01b0381168114620002f657600080fd5b919050565b600082601f8301126200030d57600080fd5b81516001600160401b0381111562000329576200032962000295565b60206200033f601f8301601f19168201620002ab565b82815285828487010111156200035457600080fd5b60005b838110156200037457858101830151828201840152820162000357565b83811115620003865760008385840101525b5095945050505050565b600080600060608486031215620003a657600080fd5b83516001600160401b0380821115620003be57600080fd5b818601915086601f830112620003d357600080fd5b8151602082821115620003ea57620003ea62000295565b8160051b620003fb828201620002ab565b928352848101820192828101908b8511156200041657600080fd5b958301955b848710156200043f576200042f87620002de565b825295830195908301906200041b565b985062000451915050888201620002de565b9550505060408601519150808211156200046a57600080fd5b506200047986828701620002fb565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b6000600019821415620004b057620004b06200025d565b5060010190565b600181811c90821680620004cc57607f821691505b60208210811415620004ee57634e487b7160e01b600052602260045260246000fd5b50919050565b60805161119662000525600039600081816105ea0152818161066f01528181610701015261095c01526111966000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063923231ff116100b8578063c7fbe1d01161007c578063c7fbe1d014610259578063d47875d01461026c578063d5999a5c1461027f578063dd1dd5c314610288578063f2fde38b146102b1578063fa6f3936146102c457600080fd5b8063923231ff14610208578063ae06711a14610228578063af157c1914610230578063b69cfa5114610246578063c5788d2b1461025057600080fd5b8063715018a6116100ff578063715018a6146101bf57806380f25fbd146101885780638971b464146101c75780638da5cb5b146101da5780638e22cdcd146101ff57600080fd5b8063158ef93e1461013c57806327cfe8561461015e57806339ecacac146101755780636032cb161461018a5780636c0360eb146101aa575b600080fd5b6002546101499060ff1681565b60405190151581526020015b60405180910390f35b610167600a5481565b604051908152602001610155565b610188610183366004610c33565b6102f0565b005b610167610198366004610c5d565b60076020526000908152604090205481565b6101b26103a9565b6040516101559190610cc5565b610188610437565b6101886101d5366004610db5565b61044b565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610155565b61016760095481565b610167610216366004610c5d565b60056020526000908152604090205481565b6101496106df565b6102386107a1565b604051610155929190610f23565b6008546101679081565b61016760015481565b610188610267366004610f7a565b6108e6565b61016761027a366004610c5d565b6109c6565b610167600b5481565b6101e7610296366004610fb7565b6006602052600090815260409020546001600160a01b031681565b6101886102bf366004610c5d565b610ac9565b6101496102d2366004610c5d565b6001600160a01b031660009081526004602052604090205460ff1690565b6102f8610b42565b6001600160a01b03821660009081526005602052604090205461035857600061032060085490565b9050610330600880546001019055565b600090815260066020526040902080546001600160a01b0319166001600160a01b0384161790555b6001600160a01b03821660009081526007602090815260408083204290556005909152902054610389908290610fe6565b6001600160a01b0390921660009081526005602052604090209190915550565b600380546103b690610ffe565b80601f01602080910402602001604051908101604052809291908181526020018280546103e290610ffe565b801561042f5780601f106104045761010080835404028352916020019161042f565b820191906000526020600020905b81548152906001019060200180831161041257829003601f168201915b505050505081565b61043f610b42565b6104496000610b9c565b565b3360009081526004602052604090205460ff166104af5760405162461bcd60e51b815260206004820152601d60248201527f43616c6c6572206973206e6f7420616c6c6f77656420746f206d696e7400000060448201526064015b60405180910390fd5b815160008167ffffffffffffffff8111156104cc576104cc610cd8565b6040519080825280602002602001820160405280156104ff57816020015b60608152602001906001900390816104ea5790505b5090508251600014156106585760005b828110156105d2576003805461052490610ffe565b80601f016020809104026020016040519081016040528092919081815260200182805461055090610ffe565b801561059d5780601f106105725761010080835404028352916020019161059d565b820191906000526020600020905b81548152906001019060200180831161058057829003601f168201915b50505050508282815181106105b4576105b4611039565b602002602001018190525080806105ca9061104f565b91505061050f565b5060405163225c6d1960e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638971b46490610621908790859060040161106a565b600060405180830381600087803b15801561063b57600080fd5b505af115801561064f573d6000803e3d6000fd5b505050506106d9565b60405163225c6d1960e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638971b464906106a6908790879060040161106a565b600060405180830381600087803b1580156106c057600080fd5b505af11580156106d4573d6000803e3d6000fd5b505050505b50505050565b6040516370a0823160e01b815233600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561074357600080fd5b505afa158015610757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077b91906110dc565b9050600081118061079b57503360009081526004602052604090205460ff165b91505090565b60608060006107af60085490565b905060008167ffffffffffffffff8111156107cc576107cc610cd8565b6040519080825280602002602001820160405280156107f5578160200160208202803683370190505b50905060008267ffffffffffffffff81111561081357610813610cd8565b60405190808252806020026020018201604052801561083c578160200160208202803683370190505b50905060005b838110156108db5760008181526006602052604090205483516001600160a01b039091169084908390811061087957610879611039565b6001600160a01b039283166020918202929092018101919091526000838152600690915260409020546108ac91166109c6565b8282815181106108be576108be611039565b6020908102919091010152806108d38161104f565b915050610842565b509094909350915050565b3360009081526004602052604090205460ff166109455760405162461bcd60e51b815260206004820152601d60248201527f43616c6c6572206973206e6f7420616c6c6f77656420746f206d696e7400000060448201526064016104a6565b604051630c7fbe1d60e41b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c7fbe1d0906109919084906004016110f5565b600060405180830381600087803b1580156109ab57600080fd5b505af11580156109bf573d6000803e3d6000fd5b5050505050565b6001600160a01b038116600090815260056020908152604080832054600954600790935290832054909183916109fc9042611108565b1015610a0b5750612710610aae565b600b546001600160a01b038516600090815260076020526040902054610a319042611108565b1115610a3f57506000610aae565b6001600160a01b038416600090815260076020526040902054610a709061271090610a6a9042611108565b90610bec565b9050610a9d600f610a97600a610a9160095486610bff90919063ffffffff16565b90610c0b565b90610bff565b9050610aab81612710611108565b90505b6000610ac0612710610a978585610bec565b95945050505050565b610ad1610b42565b6001600160a01b038116610b365760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a6565b610b3f81610b9c565b50565b6000546001600160a01b031633146104495760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610bf8828461111f565b9392505050565b6000610bf8828461113e565b6000610bf88284611108565b80356001600160a01b0381168114610c2e57600080fd5b919050565b60008060408385031215610c4657600080fd5b610c4f83610c17565b946020939093013593505050565b600060208284031215610c6f57600080fd5b610bf882610c17565b6000815180845260005b81811015610c9e57602081850181015186830182015201610c82565b81811115610cb0576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610bf86020830184610c78565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610d1757610d17610cd8565b604052919050565b600067ffffffffffffffff821115610d3957610d39610cd8565b5060051b60200190565b600082601f830112610d5457600080fd5b81356020610d69610d6483610d1f565b610cee565b82815260059290921b84018101918181019086841115610d8857600080fd5b8286015b84811015610daa57610d9d81610c17565b8352918301918301610d8c565b509695505050505050565b6000806040808486031215610dc957600080fd5b833567ffffffffffffffff80821115610de157600080fd5b610ded87838801610d43565b9450602091508186013581811115610e0457600080fd5b8601601f8082018913610e1657600080fd5b8135610e24610d6482610d1f565b81815260059190911b8301850190858101908b831115610e4357600080fd5b8685015b83811015610ecc57803587811115610e5f5760008081fd5b8601603f81018e13610e715760008081fd5b8881013588811115610e8557610e85610cd8565b610e96818801601f19168b01610cee565b8181528f8c838501011115610eab5760008081fd5b818c84018c83013760009181018b0191909152845250918701918701610e47565b5080985050505050505050509250929050565b600081518084526020808501945080840160005b83811015610f185781516001600160a01b031687529582019590820190600101610ef3565b509495945050505050565b604081526000610f366040830185610edf565b82810360208481019190915284518083528582019282019060005b81811015610f6d57845183529383019391830191600101610f51565b5090979650505050505050565b600060208284031215610f8c57600080fd5b813567ffffffffffffffff811115610fa357600080fd5b610faf84828501610d43565b949350505050565b600060208284031215610fc957600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ff957610ff9610fd0565b500190565b600181811c9082168061101257607f821691505b6020821081141561103357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561106357611063610fd0565b5060010190565b60408152600061107d6040830185610edf565b6020838203818501528185518084528284019150828160051b85010183880160005b838110156110cd57601f198784030185526110bb838351610c78565b9486019492509085019060010161109f565b50909998505050505050505050565b6000602082840312156110ee57600080fd5b5051919050565b602081526000610bf86020830184610edf565b60008282101561111a5761111a610fd0565b500390565b600081600019048311821515161561113957611139610fd0565b500290565b60008261115b57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220184788a4cc6f35dccff92634a13c1de19f608e59627d03003bf514514f7b71e664736f6c63430008090033";

type ForumConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForumConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Forum__factory extends ContractFactory {
  constructor(...args: ForumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _moderators: PromiseOrValue<string>[],
    _membershipNFT: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Forum> {
    return super.deploy(
      _moderators,
      _membershipNFT,
      _baseURI,
      overrides || {}
    ) as Promise<Forum>;
  }
  override getDeployTransaction(
    _moderators: PromiseOrValue<string>[],
    _membershipNFT: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _moderators,
      _membershipNFT,
      _baseURI,
      overrides || {}
    );
  }
  override attach(address: string): Forum {
    return super.attach(address) as Forum;
  }
  override connect(signer: Signer): Forum__factory {
    return super.connect(signer) as Forum__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForumInterface {
    return new utils.Interface(_abi) as ForumInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Forum {
    return new Contract(address, _abi, signerOrProvider) as Forum;
  }
}
